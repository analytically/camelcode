{"name":"Camelcode","tagline":"A tech demo built using Play Framework that imports the CodePoint Open UK postcode dataset and offers a Geocoding REST API and a postcode map.","body":"CamelCode\r\n=========\r\n\r\nA tech demo built using [Play Framework 2.2](http://www.playframework.org) (java) that imports the\r\n[CodePoint Open](https://www.ordnancesurvey.co.uk/opendatadownload/products.html) UK postcode dataset\r\nand offers a Geocoding RESTful API and a map. It also demonstrates how\r\n[Google Guice](http://code.google.com/p/google-guice/) can be integrated in a Play Framework Java application.\r\n\r\nDevelopment sponsored by [Coen Recruitment](http://www.coen.co.uk). Follow [@analytically](http://twitter.com/analytically) for updates.\r\n\r\n### Requirements\r\n\r\n- JDK 6 or later\r\n- [Play Framework 2.2](http://www.playframework.org)\r\n- [MongoDB](http://www.mongodb.org)\r\n\r\n### Setup\r\n\r\nEdit `conf/application.conf` and point it to a MongoDB installation (defaults to `localhost`), and execute\r\n\r\n``` sh\r\nplay run\r\n```\r\n\r\nThen drop the [CodePoint Open CSV](https://www.ordnancesurvey.co.uk/opendatadownload/products.html) (scroll halfway down, 20mb)\r\nfiles in the `codepointopen` directory.\r\n\r\nAfter each file is imported, it will be moved to the `codepointopen/done` directory.\r\n\r\nThen visit [http://localhost:9000](http://localhost:9000) and you should see the welcome screen.\r\nCheck out the [server metrics](http://localhost:9000/servermetrics) or the [map](http://localhost:9000/map).\r\n\r\n### REST API and JSON\r\n\r\nGET [http://localhost:9000/latlng/POSTCODE](http://localhost:9000/latlng/BS106TF) to geocode a UK postcode. Response will be JSON:\r\n\r\n``` json\r\n{\"latitude\":51.505615,\"longitude\":-2.6120315}\r\n```\r\n\r\n### Screenshots\r\n\r\n![Welcome Page](screenshot.png)\r\n\r\n![Map](screenshot2.png)\r\n\r\n### Technology\r\n\r\n* [Play Framework 2.2](http://www.playframework.org), as web framework\r\n* [Apache Camel](http://camel.apache.org) to [process and monitor](https://github.com/analytically/camelcode/blob/master/app/Global.java#L103) the `codepointopen` directory and to tell the actors about the postcodes (split(body()))\r\n* [Akka](http://akka.io) provides a nice concurrency model [to process the 1.7 million postcodes](https://github.com/analytically/camelcode/blob/master/app/actors/ProcessCPOCsvEntry.java) in under one minute on modern hardware\r\n* [GeoTools](http://www.geotools.org) [converts](https://github.com/analytically/camelcode/blob/master/app/actors/ProcessCPOCsvEntry.java) the eastings/northings to latitude/longitude\r\n* [Guice](http://code.google.com/p/google-guice/) for [Dependency Injection](https://github.com/analytically/camelcode/blob/master/app/Global.java#L53) (not too much to inject yet though)\r\n* [Metrics](http://metrics.codahale.com/) for metrics\r\n* [MongoDB](http://www.mongodb.org) as database with two-dimensional geospatial indexes (see [Geospatial Indexing](http://www.mongodb.org/display/DOCS/Geospatial+Indexing))\r\n* [Morphia](https://github.com/mongodb/morphia) for 'Object-Document Mapping'\r\n* [Leaflet](http://leafletjs.com/) for the map\r\n* [Twitter Bootstrap](http://twitter.github.com/bootstrap/) and [Font Awesome](http://fortawesome.github.com/Font-Awesome/) for the UI\r\n\r\n### License\r\n\r\nLicensed under the [WTFPL](http://en.wikipedia.org/wiki/WTFPL).\r\n\r\nThis data contains Ordnance Survey data &copy; Crown copyright and database right 2013. Code-Point Open contains\r\nRoyal Mail data &copy; Royal Mail copyright and database right 2012. Code-Point Open and ONSPD contains National Statistics\r\ndata &copy; Crown copyright and database right 2013.\r\n\r\nOS data may be used under the terms of the [OS OpenData licence](http://www.ordnancesurvey.co.uk/oswebsite/docs/licences/os-opendata-licence.pdf).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}